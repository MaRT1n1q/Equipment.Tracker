name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—É—à–µ —Ç–µ–≥–æ–≤ —Ç–∏–ø–∞ v1.0.0, v1.0.1 –∏ —Ç.–¥.

permissions:
  contents: write # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–æ–≤

jobs:
  # –ë–∏–ª–¥ –¥–ª—è Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue release
        shell: pwsh

      - name: Build Windows application
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: |
            release/*.exe
            release/*.exe.blockmap
            release/latest.yml
          retention-days: 1

  # –ë–∏–ª–¥ –¥–ª—è macOS
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: rm -rf release

      - name: Build macOS application
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: |
            release/*.dmg
            release/*.dmg.blockmap
            release/latest-mac.yml
          retention-days: 1

  # –ë–∏–ª–¥ –¥–ª—è Linux
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: rm -rf release

      - name: Build Linux application
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: |
            release/*.AppImage
            release/*.AppImage.blockmap
            release/latest-linux.yml
          retention-days: 1

  # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ —Å–æ –≤—Å–µ–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-release
          path: ./release-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-release
          path: ./release-macos

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-release
          path: ./release-linux

      - name: Create Release with all platforms
        uses: softprops/action-gh-release@v2
        with:
          name: üöÄ Equipment Tracker v${{ steps.get_version.outputs.VERSION }}
          body: |
            # üöÄ –†–µ–ª–∏–∑ Equipment Tracker v${{ steps.get_version.outputs.VERSION }}


            ---

            ## üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞

            ### ü™ü Windows (x64)

            [![Download EXE](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.exe-blue?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-win-x64.exe)

            ‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º

            ---

            ### üçè macOS

            **Intel (x64):**

            [![Download DMG Intel](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.dmg-brightgreen?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-mac-x64.dmg) [![Download ZIP Intel](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.zip-green?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-mac-x64.zip)

            **Apple Silicon (arm64):**

            [![Download DMG ARM](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.dmg-brightgreen?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-mac-arm64.dmg) [![Download ZIP ARM](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.zip-green?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-mac-arm64.zip)

            üìÇ –û—Ç–∫—Ä–æ–π—Ç–µ `.dmg` –∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É **Applications**

            ---

            ### üêß Linux (x64)

            [![Download AppImage](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.AppImage-orange?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-linux-x64.AppImage) [![Download DEB](https://img.shields.io/badge/üíæ_–°–∫–∞—á–∞—Ç—å-.deb-red?style=for-the-badge)](https://github.com/MaRT1n1q/Equipment.Tracker/releases/download/v${{ steps.get_version.outputs.VERSION }}/Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-linux-x64.deb)

            **–î–ª—è AppImage:**
            ```bash
            chmod +x Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-linux-x64.AppImage
            ./Equipment-Tracker-${{ steps.get_version.outputs.VERSION }}-linux-x64.AppImage
            ```

            ---

            ## üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

            –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ **–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ** ‚Äî –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ üí´
          draft: false
          prerelease: false
          files: |
            ./release-windows/*
            ./release-macos/*
            ./release-linux/*
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
