name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—É—à–µ —Ç–µ–≥–æ–≤ —Ç–∏–ø–∞ v1.0.0, v1.0.1 –∏ —Ç.–¥.

permissions:
  contents: write # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–æ–≤

jobs:
  # –ë–∏–ª–¥ –¥–ª—è Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue release
        shell: pwsh

      - name: Build Windows application
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: |
            release/*.exe
            release/*.exe.blockmap
            release/latest.yml
          retention-days: 1

  # –ë–∏–ª–¥ –¥–ª—è macOS
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: rm -rf release

      - name: Build macOS application
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: |
            release/*.dmg
            release/*.dmg.blockmap
            release/latest-mac.yml
          retention-days: 1

  # –ë–∏–ª–¥ –¥–ª—è Linux
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean release folder
        run: rm -rf release

      - name: Build Linux application
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: |
            release/*.AppImage
            release/*.AppImage.blockmap
            release/latest-linux.yml
          retention-days: 1

  # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ —Å–æ –≤—Å–µ–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-release
          path: ./release-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-release
          path: ./release-macos

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-release
          path: ./release-linux

      - name: Create Release with all platforms
        uses: softprops/action-gh-release@v2
        with:
          name: –í–µ—Ä—Å–∏—è ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## üöÄ –†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ ${{ steps.get_version.outputs.VERSION }}
            
            ### –ß—Ç–æ –Ω–æ–≤–æ–≥–æ:
            - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è
            - –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            - –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π
            - –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
            
            ### üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞
            
            **Windows:**
            - –°–∫–∞—á–∞–π—Ç–µ `.exe` —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
            
            **macOS:**
            - –°–∫–∞—á–∞–π—Ç–µ `.dmg` —Ñ–∞–π–ª, –æ—Ç–∫—Ä–æ–π—Ç–µ –∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –≤ Applications
            
            **Linux:**
            - –°–∫–∞—á–∞–π—Ç–µ `.AppImage` —Ñ–∞–π–ª
            - –°–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º: `chmod +x Equipment-Tracker-*.AppImage`
            - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: `./Equipment-Tracker-*.AppImage`
            
            ### üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç –∏ –∑–∞–≥—Ä—É–∑–∏—Ç —ç—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.
          draft: false
          prerelease: false
          files: |
            ./release-windows/*
            ./release-macos/*
            ./release-linux/*
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
